// This file was auto-generated by prisma-generator-typescript-interfaces

export type ChatChannel = "LOBBY" | "GAME" | "TOURNAMENT" | "PRIVATE";

export type FriendshipStatus = "PENDING" | "ACCEPTED" | "BLOCKED";

export type Gender = "BOY" | "GIRL" | "ALIEN" | "UNSURE" | "ROBOT" | "COMPLICATED";

export type NotificationType = "SYSTEM" | "FRIEND_REQUEST" | "ACHIEVEMENT" | "BALANCE_UPDATE" | "PROMOTIONAL" | "TOURNAMENT";

export type TransactionStatus = "PENDING" | "COMPLETED" | "FAILED" | "CANCELLED" | "REFUNDED";

export type TransactionType = "DEPOSIT" | "WITHDRAWAL" | "BET" | "WIN" | "BONUS" | "DONATION" | "ADJUSTMENT" | "TOURNAMENT_BUYIN" | "TOURNAMENT_PRIZE";

export type UserStatus = "ACTIVE" | "INACTIVE" | "ONLINE" | "OFFLINE";

export interface Iachievement {
  id: string;
  name: string;
  description: string;
  targetXp: number;
  reward: Decimal | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  userachievement: Iuserachievement[];
}

export interface IUser {
  id: string;
  name: string | null;
  email: string;
  emailVerified: boolean | null;
  image: string | null;
  createdAt: Date;
  updatedAt: Date | null;
  twoFactorEnabled: boolean | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  sessions: ISession[];
  accounts: IAccount[];
  members: IMember[];
  invitations: IInvitation[];
  twofactors: ITwoFactor[];
  username: string;
  passwordHash: string | null;
  totalXp: number;
  balance: Decimal;
  isVerified: boolean;
  active: boolean;
  lastLogin: Date | null;
  verificationToken: string | null;
  avatar: string | null;
  activeProfileId: string | null;
  gender: Gender | null;
  status: UserStatus | null;
  cashtag: string | null;
  phpId: number | null;
  accessToken: string | null;
  RainBet: IRainBet[];
  RainHistory: IRainHistory[];
  RainTip: IRainTip[];
  RainWinner: IRainWinner[];
  chatmessage: Ichatmessage[];
  friendship_friendship_friendIdTouser: Ifriendship[];
  friendship_friendship_userIdTouser: Ifriendship[];
  notification: Inotification[];
  operator: Ioperator[];
  activeProfile: Iprofile[];
  tournamententry: Itournamententry[];
  userachievement: Iuserachievement[];
}

export interface ISession {
  id: string;
  userId: string;
  activeGameId: string | null;
  ipAddress: string | null;
  userAgent: string | null;
  expiresAt: Date;
  createdAt: Date;
  refreshToken: string | null;
  active: boolean;
  user: IUser;
  token: string;
  updatedAt: Date | null;
}

export interface Ioperator {
  id: string;
  name: string;
  slug: string;
  logo: string | null;
  description: string | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  ownerId: string;
  bank: Ibank[];
  user: IUser;
  operatorgame: Ioperatorgame[];
  profile: Iprofile[];
  tournament: Itournament[];
}

export interface IMessage {
  id: string;
  content: string;
  createdAt: Date;
  updatedAt: Date;
  authorId: string;
}

export interface Iprofile {
  id: string;
  balance: number;
  xpEarned: number;
  isActive: boolean;
  lastPlayed: Date | null;
  createdAt: Date;
  updatedAt: Date | null;
  phpId: number | null;
  userId: string;
  bankId: string;
  currency: string;
  shopId: string;
  gamesession: Igamesession[];
  bank: Ibank;
  operator: Ioperator;
  user_profile_userIdTouser: IUser;
  tournamententry: Itournamententry[];
  transactions: Itransaction[];
}

export interface IAccount {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  user: IUser;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: Date | null;
  refreshTokenExpiresAt: Date | null;
  scope: string | null;
  password: string | null;
  createdAt: Date;
  updatedAt: Date | null;
}

export interface Ioperatorgame {
  id: string;
  name: string;
  slug: string;
  description: string | null;
  thumbnail: string | null;
  minBet: Decimal | null;
  maxBet: Decimal | null;
  xpMultiplier: number;
  isActive: boolean;
  isPromoted: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  operatorId: string;
  gamesession: Igamesession[];
  operator: Ioperator;
  tournamentgame: Itournamentgame[];
}

export interface IVerification {
  id: string;
  identifier: string;
  value: string;
  expiresAt: Date;
  createdAt: Date | null;
  updatedAt: Date | null;
}

export interface IOrganization {
  id: string;
  name: string;
  slug: string | null;
  logo: string | null;
  createdAt: Date;
  metadata: string | null;
  members: IMember[];
  invitations: IInvitation[];
}

export interface IMember {
  id: string;
  organizationId: string;
  organization: IOrganization;
  userId: string;
  user: IUser;
  role: string;
  createdAt: Date;
}

export interface IInvitation {
  id: string;
  organizationId: string;
  organization: IOrganization;
  email: string;
  role: string | null;
  status: string;
  expiresAt: Date;
  inviterId: string;
  user: IUser;
}

export interface ITwoFactor {
  id: string;
  secret: string;
  backupCodes: string;
  userId: string;
  user: IUser;
}

export interface Ibank {
  id: string;
  name: string;
  currency: string;
  isActive: boolean;
  createdAt: Date;
  operatorId: string;
  operator: Ioperator;
  profile: Iprofile[];
}

export interface Ichatmessage {
  id: string;
  content: string;
  channel: ChatChannel;
  metadata: JsonValue | null;
  createdAt: Date;
  userId: string;
  roomId: string | null;
  chatroom: Ichatroom | null;
  user: IUser;
}

export interface Ichatroom {
  id: string;
  name: string;
  isGameRoom: boolean;
  createdAt: Date;
  gameSessionId: string | null;
  chatmessage: Ichatmessage[];
  gamesession: Igamesession | null;
}

export interface Ifriendship {
  id: string;
  status: FriendshipStatus;
  createdAt: Date;
  updatedAt: Date | null;
  userId: string;
  friendId: string;
  user_friendship_friendIdTouser: IUser;
  user_friendship_userIdTouser: IUser;
}

export interface Igamesession {
  id: string;
  startTime: Date;
  endTime: Date | null;
  betAmount: Decimal | null;
  winAmount: Decimal | null;
  xpEarned: number;
  metadata: JsonValue | null;
  gameId: string;
  tournamentId: string | null;
  active: boolean;
  profileId: string;
  chatroom: Ichatroom[];
  operatorgame: Ioperatorgame;
  profile: Iprofile;
  tournament: Itournament | null;
  transaction: Itransaction[];
}

export interface IProduct {
  id: string;
  updatedAt: Date;
  createdAt: Date;
  name: string;
  productId: string;
  price: string | null;
}

export interface Inotification {
  id: string;
  type: NotificationType;
  title: string;
  message: string;
  isRead: boolean;
  readAt: Date | null;
  metadata: JsonValue | null;
  createdAt: Date;
  userId: string;
  user: IUser;
}

export interface Itournament {
  id: string;
  name: string;
  description: string | null;
  startTime: Date;
  endTime: Date;
  entryFee: Decimal | null;
  prizePool: Decimal;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  operatorId: string;
  leaderboard: JsonValue | null;
  gamesession: Igamesession[];
  operator: Ioperator;
  tournamententry: Itournamententry[];
  tournamentgame: Itournamentgame[];
}

export interface Itournamententry {
  id: string;
  score: number;
  wagered: Decimal;
  won: Decimal;
  joinedAt: Date;
  userId: string;
  tournamentId: string;
  profileId: string;
  profile: Iprofile;
  tournament: Itournament;
  user: IUser;
}

export interface Itournamentgame {
  id: string;
  multiplier: number;
  tournamentId: string;
  gameId: string;
  operatorgame: Ioperatorgame;
  tournament: Itournament;
}

export interface Itransaction {
  id: string;
  type: TransactionType;
  amount: Decimal;
  reference: string | null;
  status: TransactionStatus;
  metadata: JsonValue | null;
  isRealMoney: boolean;
  paymentMethod: string | null;
  paymentDetails: JsonValue | null;
  createdAt: Date;
  processedAt: Date | null;
  gameSessionId: string | null;
  profileId: string;
  gamesession: Igamesession | null;
  profile: Iprofile;
}

export interface Iuserachievement {
  id: string;
  progress: number;
  isUnlocked: boolean;
  unlockedAt: Date | null;
  createdAt: Date;
  updatedAt: Date | null;
  userId: string;
  achievementId: string;
  achievement: Iachievement;
  user: IUser;
}

export interface IRainBet {
  id: string;
  rainHistoryId: string;
  userId: string;
  betAmount: Decimal;
  odds: Decimal;
  outcome: string | null;
  settledAt: Date | null;
  RainHistory: IRainHistory;
  user: IUser;
}

export interface IRainHistory {
  id: string;
  userId: string;
  amount: Decimal;
  rainType: string;
  createdAt: Date;
  RainBet: IRainBet[];
  user: IUser;
  RainTip: IRainTip[];
  RainWinner: IRainWinner[];
}

export interface IRainTip {
  id: string;
  rainHistoryId: string;
  userId: string;
  tipAmount: Decimal;
  tippedAt: Date;
  RainHistory: IRainHistory;
  user: IUser;
}

export interface IRainWinner {
  id: string;
  rainHistoryId: string;
  userId: string;
  wonAmount: Decimal;
  wonAt: Date;
  RainHistory: IRainHistory;
  user: IUser;
}

type Decimal = { valueOf(): string };

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | Array<JsonValue> | null;
