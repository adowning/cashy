// This file was auto-generated by prisma-generator-typescript-interfaces

export type ChatChannel = "LOBBY" | "GAME" | "TOURNAMENT" | "PRIVATE";

export type FriendshipStatus = "PENDING" | "ACCEPTED" | "BLOCKED";

export type Gender = "BOY" | "GIRL" | "ALIEN" | "UNSURE" | "ROBOT" | "COMPLICATED";

export type NotificationType = "SYSTEM" | "FRIEND_REQUEST" | "ACHIEVEMENT" | "BALANCE_UPDATE" | "PROMOTIONAL" | "TOURNAMENT";

export type TransactionStatus = "PENDING" | "COMPLETED" | "FAILED" | "CANCELLED" | "REFUNDED" | "EXPIRED" | "REJECTED";

export type TransactionType = "DEPOSIT" | "WITHDRAWAL" | "BET" | "WIN" | "BONUS" | "DONATION" | "ADJUSTMENT" | "TOURNAMENT_BUYIN" | "TOURNAMENT_PRIZE";

export type UserStatus = "ACTIVE" | "INACTIVE" | "ONLINE" | "OFFLINE";

export type GameCategory = "TABLE" | "FISH" | "POKER" | "SLOTS" | "OTHER";

export interface achievement {
  id: string;
  name: string;
  description: string;
  targetXp: number;
  reward: number | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  userachievement: userachievement[];
}

export interface User {
  id: string;
  name: string | null;
  email: string;
  emailVerified: boolean | null;
  image: string | null;
  createdAt: Date;
  updatedAt: Date | null;
  twoFactorEnabled: boolean | null;
  role: string | null;
  banned: boolean | null;
  banReason: string | null;
  banExpires: Date | null;
  username: string;
  passwordHash: string | null;
  totalXp: number;
  balance: number;
  isVerified: boolean;
  active: boolean;
  lastLogin: Date | null;
  verificationToken: string | null;
  avatar: string | null;
  activeProfileId: string | null;
  gender: Gender | null;
  status: UserStatus | null;
  cashtag: string | null;
  phpId: number | null;
  accessToken: string | null;
  vipInfoId: string | null;
  lastDailySpin: Date | null;
  operator: Operator[];
  activeProfile: Profile[];
  RainBet: RainBet[];
  RainHistory: RainHistory[];
  RainTip: RainTip[];
  RainWinner: RainWinner[];
  sessions: Session[];
  accounts: Account[];
  chatmessage: chatmessage[];
  friendship_friendship_friendIdTouser: friendship[];
  friendship_friendship_userIdTouser: friendship[];
  invitations: Invitation[];
  members: Member[];
  notification: notification[];
  tournamententry: tournamententry[];
  twofactors: TwoFactor[];
  userachievement: userachievement[];
  vipInfo: VipInfo | null;
}

export interface Session {
  id: string;
  userId: string;
  activeGameId: string | null;
  ipAddress: string | null;
  userAgent: string | null;
  expiresAt: Date;
  createdAt: Date;
  refreshToken: string | null;
  active: boolean;
  token: string;
  updatedAt: Date | null;
  user: User;
}

export interface Operator {
  id: string;
  name: string;
  slug: string;
  logo: string | null;
  description: string | null;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  acceptedPayments: string[];
  ownerId: string;
  balance: number;
  owner: User;
  profiles: Profile[];
  games: Game[];
  products: Product[];
  tournaments: tournament[];
}

export interface Message {
  id: string;
  content: string;
  createdAt: Date;
  updatedAt: Date;
  authorId: string;
}

export interface Profile {
  id: string;
  balance: number;
  xpEarned: number;
  isActive: boolean;
  lastPlayed: Date | null;
  createdAt: Date;
  updatedAt: Date | null;
  phpId: number | null;
  userId: string;
  currency: string;
  shopId: string;
  operator: Operator;
  user_profile_userIdTouser: User;
  gamesession: gamesession[];
  tournamententry: tournamententry[];
  transactions: Transaction[];
}

export interface Game {
  id: string;
  name: string;
  title: string;
  temperature: string | null;
  developer: string | null;
  vipLevel: number | null;
  isActive: boolean | null;
  device: number | null;
  featured: boolean | null;
  gamebank: string | null;
  bet: number | null;
  denomination: number | null;
  categoryTemp: number | null;
  originalId: number | null;
  bids: number | null;
  statIn: number | null;
  statOut: number | null;
  currentRtp: number | null;
  rtpStatIn: number | null;
  rtpStatOut: number | null;
  standardRtp: number | null;
  popularity: number | null;
  chanceFirepot1: number | null;
  chanceFirepot2: number | null;
  chanceFirepot3: number | null;
  fireCount1: number | null;
  fireCount2: number | null;
  fireCount3: number | null;
  linesPercentConfigSpin: string | null;
  linesPercentConfigSpinBonus: string | null;
  linesPercentConfigBonus: string | null;
  linesPercentConfigBonusBonus: string | null;
  rezerv: number | null;
  cask: number | null;
  advanced: string | null;
  scaleMode: string;
  slotViewState: string;
  view: number | null;
  categoryId: string | null;
  operatorId: string | null;
  providerId: string | null;
  createdAt: Date;
  updatedAt: Date;
  jackpotGroupId: string | null;
  active: boolean;
  password: string | null;
  category: GameCategory;
  operator: Operator | null;
  gamesession: gamesession[];
  tournamentgame: tournamentgame[];
}

export interface Account {
  id: string;
  accountId: string;
  providerId: string;
  userId: string;
  accessToken: string | null;
  refreshToken: string | null;
  idToken: string | null;
  accessTokenExpiresAt: Date | null;
  refreshTokenExpiresAt: Date | null;
  scope: string | null;
  password: string | null;
  createdAt: Date;
  updatedAt: Date | null;
  user: User;
}

export interface operatorgame {
  id: string;
  name: string;
  slug: string;
  description: string | null;
  thumbnail: string | null;
  minBet: number | null;
  maxBet: number | null;
  xpMultiplier: number;
  isActive: boolean;
  isPromoted: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  operatorId: string;
}

export interface Verification {
  id: string;
  identifier: string;
  value: string;
  expiresAt: Date;
  createdAt: Date | null;
  updatedAt: Date | null;
}

export interface Organization {
  id: string;
  name: string;
  slug: string | null;
  logo: string | null;
  createdAt: Date;
  metadata: string | null;
  invitations: Invitation[];
  members: Member[];
}

export interface Member {
  id: string;
  organizationId: string;
  userId: string;
  role: string;
  createdAt: Date;
  organization: Organization;
  user: User;
}

export interface Invitation {
  id: string;
  organizationId: string;
  email: string;
  role: string | null;
  status: string;
  expiresAt: Date;
  inviterId: string;
  user: User;
  organization: Organization;
}

export interface TwoFactor {
  id: string;
  secret: string;
  backupCodes: string;
  userId: string;
  user: User;
}

export interface chatmessage {
  id: string;
  content: string;
  channel: ChatChannel;
  metadata: JsonValue | null;
  createdAt: Date;
  userId: string;
  roomId: string | null;
  chatroom: chatroom | null;
  user: User;
}

export interface chatroom {
  id: string;
  name: string;
  isGameRoom: boolean;
  createdAt: Date;
  gameSessionId: string | null;
  chatmessage: chatmessage[];
  gamesession: gamesession | null;
}

export interface friendship {
  id: string;
  status: FriendshipStatus;
  createdAt: Date;
  updatedAt: Date | null;
  userId: string;
  friendId: string;
  user_friendship_friendIdTouser: User;
  user_friendship_userIdTouser: User;
}

export interface gamesession {
  id: string;
  startTime: Date;
  endTime: Date | null;
  betAmount: number | null;
  winAmount: number | null;
  xpEarned: number;
  metadata: JsonValue | null;
  gameId: string;
  tournamentId: string | null;
  active: boolean;
  profileId: string;
  chatroom: chatroom[];
  game: Game;
  profile: Profile;
  tournament: tournament | null;
  Transaction: Transaction[];
}

export interface Product {
  id: string;
  title: string;
  description: string;
  url: string;
  type: string;
  bonusCode: string | null;
  bonusTotalInCredits: number | null;
  priceInCents: number;
  amountToReceiveInCredits: number;
  bestValue: number;
  discountInCents: number;
  bonusSpins: number | null;
  isPromo: boolean | null;
  totalDiscountInCents: number;
  shopId: string | null;
  createdAt: Date;
  updatedAt: Date | null;
  operator: Operator | null;
  transactions: Transaction[];
}

export interface notification {
  id: string;
  type: NotificationType;
  title: string;
  message: string;
  isRead: boolean;
  readAt: Date | null;
  metadata: JsonValue | null;
  createdAt: Date;
  userId: string;
  user: User;
}

export interface tournament {
  id: string;
  name: string;
  description: string | null;
  startTime: Date;
  endTime: Date;
  entryFee: number | null;
  prizePool: number;
  isActive: boolean;
  createdAt: Date;
  updatedAt: Date | null;
  operatorId: string;
  leaderboard: JsonValue | null;
  gamesession: gamesession[];
  operator: Operator;
  tournamententry: tournamententry[];
  tournamentgame: tournamentgame[];
}

export interface tournamententry {
  id: string;
  score: number;
  wagered: number;
  won: number;
  joinedAt: Date;
  userId: string;
  tournamentId: string;
  profileId: string;
  profile: Profile;
  tournament: tournament;
  user: User;
}

export interface tournamentgame {
  id: string;
  multiplier: number;
  tournamentId: string;
  gameId: string;
  game: Game;
  tournament: tournament;
}

export interface Transaction {
  id: string;
  type: TransactionType;
  amount: number;
  amountCredits: number;
  buyerCashtag: string | null;
  buyerUserId: string | null;
  username: string | null;
  cashiername: string | null;
  cashierAvatar: string | null;
  cashierId: string | null;
  reference: string | null;
  status: TransactionStatus;
  metadata: JsonValue | null;
  isRealMoney: boolean;
  paymentMethod: string | null;
  paymentDetails: JsonValue | null;
  createdAt: Date;
  processedAt: Date | null;
  gameSessionId: string | null;
  profileId: string;
  cashtag: string | null;
  gamesession: gamesession | null;
  profile: Profile;
  product: Product | null;
  productid: string | null;
}

export interface userachievement {
  id: string;
  progress: number;
  isUnlocked: boolean;
  unlockedAt: Date | null;
  createdAt: Date;
  updatedAt: Date | null;
  userId: string;
  achievementId: string;
  achievement: achievement;
  user: User;
}

export interface RainBet {
  id: string;
  rainHistoryId: string;
  userId: string;
  betAmount: number;
  odds: number;
  outcome: string | null;
  settledAt: Date | null;
  RainHistory: RainHistory;
  user: User;
}

export interface RainHistory {
  id: string;
  userId: string;
  amount: number;
  rainType: string;
  createdAt: Date;
  RainBet: RainBet[];
  user: User;
  RainTip: RainTip[];
  RainWinner: RainWinner[];
}

export interface RainTip {
  id: string;
  rainHistoryId: string;
  userId: string;
  tipAmount: number;
  tippedAt: Date;
  RainHistory: RainHistory;
  user: User;
}

export interface RainWinner {
  id: string;
  rainHistoryId: string;
  userId: string;
  wonAmount: number;
  wonAt: Date;
  RainHistory: RainHistory;
  user: User;
}

export interface VipInfo {
  id: number;
  level: number;
  deposit_exp: number;
  bet_exp: number;
  rank_bet_exp: number;
  rank_deposit_exp: number;
  rank_name: string;
  icon: string;
  exp_switch_type: number;
  now_deposit_exp: string;
  level_deposit_exp: string;
  now_bet_exp: string;
  level_bet_exp: string;
  telegram: string;
  is_protection: boolean;
  protection_deposit_exp: string;
  protection_deposit_amount: string;
  protection_bet_exp: string;
  protection_bet_amount: string;
  protection_days: number;
  protection_switch: number;
  cycle_award_switch: boolean;
  level_award_switch: boolean;
  signin_award_switch: boolean;
  bet_award_switch: boolean;
  withdrawal_award_switch: boolean;
  unprotection_deposit_exp: string;
  unprotection_deposit_amount: string;
  unprotection_bet_exp: string;
  unprotection_bet_amount: string;
  unprotection_days: number;
  unprotection_switch: number;
  main_currency: string;
  can_receive_level_award: boolean;
  can_receive_rank_award: boolean;
  can_receive_day_award: boolean;
  can_receive_week_award: boolean;
  can_receive_month_award: boolean;
  can_receive_signin_award: boolean;
  can_receive_bet_award: boolean;
  can_receive_withdrawal_award: boolean;
  userid: string;
  user: User;
}

export interface event_log {
  id: bigint;
  table_name: string;
  row_id: string | null;
  operation: string;
  payload: JsonValue | null;
  created_at: Date | null;
}

type JsonValue = string | number | boolean | { [key in string]?: JsonValue } | Array<JsonValue> | null;
